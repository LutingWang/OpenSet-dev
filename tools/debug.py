# import os
# import shutil
# import zipfile
# print('extract')
# os.symlink('/data/oss_bucket_0', 'data')
# filename = 'data/lvis_v1/proposal_embeddings.zip'
# if not zipfile.is_zipfile(filename):
#     raise RuntimeError(f"{filename} is not a zip file.")
# f = zipfile.ZipFile(filename)
# f.extractall('data/lvis_v1')

# import os
# import shutil
# os.symlink('/data/oss_bucket_0', 'data')
# print(len(os.listdir('data/lvis_v1/data/lvis_clip_image_embedding/train2017/')))
# print(len(os.listdir('data/lvis_v1/proposal_embeddings10/train')))
# shutil.copytree('data/lvis_v1/data/lvis_clip_image_embedding/train2017/', 'data/lvis_v1/proposal_embeddings10/train')

# import pickle
# import torch
# import plotly.graph_objects as go
# from todd.utils import BBoxes
# areas = []
# with open('data/lvis_v1/proposals/rpn_r101_fpn_lvis_v1_val.pkl', 'rb') as f:
#     for proposal in pickle.load(f)[:200]:
#         proposal = torch.Tensor(proposal[:, :4])
#         proposal = BBoxes(proposal)
#         areas.append(proposal.areas)
# areas = torch.cat(areas)
# areas = areas[areas > 1]
# areas = areas[areas < 64 * 64]
# # area_hist = torch.histc(areas, bins=100)
# # area_range = torch.linspace(areas.min(), areas.max(), 100)
# # print(area_hist, area_range)
# fig = go.Figure(data=[go.Histogram(x=areas, nbinsx=1000)])
# fig.show()

# import torch
# # from mmdet.datasets import CocoDataset
# from mmdet.datasets import LVISV1Dataset as CocoDataset
# # from denseclip.datasets import COCO_SEEN_48_17, COCO_UNSEEN_48_17
# from denseclip.datasets import LVIS_V1_SEEN_866_337 as COCO_SEEN_48_17
# from denseclip.datasets import LVIS_V1_UNSEEN_866_337 as COCO_UNSEEN_48_17
# seen_classes = [CocoDataset.CLASSES[i] for i in COCO_SEEN_48_17]
# unseen_classes = [CocoDataset.CLASSES[i] for i in COCO_UNSEEN_48_17]
# # class_embeddings = torch.load('data/coco/prompt/vild_RN50.pt')
# class_embeddings = torch.load('data/lvis_v1/prompt/detpro_vild_ViT-B-32.pt', 'cpu')
# seen_class_embeddings = class_embeddings[COCO_SEEN_48_17]
# unseen_class_embeddings = class_embeddings[COCO_UNSEEN_48_17]
# similarity = torch.einsum('u c, s c -> u s', unseen_class_embeddings, seen_class_embeddings).float()
# print(similarity.min(), similarity.mean(), similarity.max())
# # values, indices = torch.topk(1 - similarity.abs(), k=5, dim=1)
# # values = 1 - values
# # for i, (value, index) in enumerate(zip(values, indices)):
# #     print(unseen_classes[i], {seen_classes[i]: v for i, v in zip(index, value)})


# import os
# from pathlib import Path
# import zipfile

# from tqdm import tqdm

# os.symlink('/data/oss_bucket_0', 'data')
# a = zipfile.ZipFile('data/lvis_v1/image_embeddings.zip', 'w')
# b = Path('data/lvis_v1/image_embeddings/train')
# for c in tqdm(b.glob('*.pth')):
#     a.write(c)
# a.close()



# import json
# from pathlib import Path
# import todd
# import torch
# import plotly.express as px

# lvis = json.load(Path('data/lvis_v1/annotations/lvis_v1_train.json').open())
# anns = lvis['annotations']
# cats = lvis['categories']
# cat2id = {cat['id']: i for i, cat in enumerate(cats)}

# accuracy = todd.utils.MultiLabelAccuracy(num_classes=len(cats))
# # accuracy_r = todd.utils.MultiLabelAccuracy(num_classes=len(cats))

# class_embeddings = torch.load('data/lvis_v1/prompt/detpro_ViT-B-32.pt', 'cpu').half()

# data_root = Path('data/lvis_v1/image_embeddings/train')
# for i, data in enumerate(data_root.glob('*.pth')):
#     # if i > 5:
#     #     break
#     image_embedding = torch.load(data, 'cpu').half()
#     logits = torch.einsum('d, c d -> c', image_embedding, class_embeddings)
#     img_id = int(data.stem)
#     classes = {cat2id[ann['category_id']] for ann in anns if ann['image_id'] == img_id}
#     accuracy.evaluate(logits.unsqueeze(0), [classes])

# px.bar(accuracy.topandas()).show()


# import os
# from pathlib import Path
# import torch

# os.symlink('/data/oss_bucket_0', 'data')
# data_root = Path('data/lvis_v1/image_embeddings/train')
# new_data_root = Path('data/lvis_v1/image_embeddings1/train')
# new_data_root.mkdir(parents=True, exist_ok=True)
# for data in data_root.glob('*.pth'):
#     image_embedding = torch.load(data, map_location='cpu')
#     torch.save(image_embedding.clone(), new_data_root / data.name)

# import os
# from pathlib import Path
# os.symlink('/data/oss_bucket_0', 'data')
# data_root = Path('data/lvis_v1/image_embeddings/train')
# new_data_root = Path('data/lvis_v1/image_embeddings1/train')
# print(len(list(data_root.glob('*.pth'))))
# print(len(list(new_data_root.glob('*.pth'))))


ids = [
    507904, 139270, 253965, 376848, 311327, 385057, 319521, 90148, 155687, 81967, 147506, 
    213048, 41018, 540746, 237645, 245842, 524386, 131171, 508006, 172135, 458864, 327799, 
    335992, 41085, 131207, 295051, 106635, 90257, 565399, 24728, 516249, 172187, 303260, 
    450728, 114861, 442543, 368821, 16574, 196, 557254, 401625, 319706, 344292, 270570, 
    434415, 147701, 459006, 303360, 377090, 377091, 262404, 98563, 237844, 418070, 213276, 
    327964, 41246, 155941, 16680, 41257, 508200, 180522, 287027, 74037, 573759, 164170, 319818, 
    213351, 49517, 270702, 418175, 278923, 500110, 344467, 57753, 180641, 57764, 106920, 
    319917, 25009, 446, 74181, 500165, 352709, 66001, 156120, 311771, 123360, 156128, 164327, 
    336360, 344555, 287216, 238065, 573947, 279047, 180764, 549409, 451107, 205352, 401967, 
    442929, 197169, 533041, 328255, 279103, 393795, 107105, 279138, 107108, 287335, 41575, 
    369259, 148077, 139887, 213621, 516727, 385666, 180869, 148102, 565902, 197264, 25234, 
    221846, 82585, 262810, 197289, 139952, 516786, 361140, 221880, 74428, 107204, 715, 221910, 
    385752, 131804, 484062, 189152, 353001, 140010, 361197, 549617, 549626, 541439, 238336, 
    557829, 361222, 328462, 418578, 74517, 434966, 123677, 33571, 361258, 459566, 303922, 
    443192, 402235, 58184, 574281, 17235, 9062, 426857, 25457, 361332, 377732, 115604, 328599, 
    557985, 164772, 25521, 533434, 222140, 435134, 172995, 148422, 9172, 361437, 156651, 558070, 
    148479, 214018, 566276, 99342, 402447, 173071, 222228, 377879, 427036, 255010, 132132, 
    312368, 197680, 361521, 558137, 508990, 115776, 402514, 189539, 50276, 468068, 287849, 
    164972, 443512, 435327, 9353, 500877, 1168, 50321, 83093, 74913, 156846, 410805, 435384, 
    148665, 492729, 402623, 246976, 74945, 189646, 451798, 83161, 484573, 42215, 484587, 468205, 
    124142, 1264, 255216, 74996, 156935, 337180, 222492, 50461, 468258, 460068, 501031, 17707, 
    476465, 517430, 206137, 181564, 304445, 525640, 296277, 345429, 460129, 50531, 279929, 279948, 
    484758, 173464, 402846, 157093, 42407, 492970, 173484, 58796, 320957, 468417, 435653, 533961, 
    148937, 9679, 17882, 452058, 165341, 132574, 116210, 157172, 542202, 116223, 427519, 321026, 
    157186, 476681, 484875, 26132, 550423, 173596, 263710, 566824, 476715, 189996, 501292, 189998, 
    206384, 1590, 525903, 34387, 427606, 99927, 34397, 509534, 42591, 206435, 353920, 427654, 
    116361, 534178, 34471, 509607, 280236, 575149, 157358, 378541, 272048, 304818, 50868, 566968, 
    26348, 181996, 354041, 304889, 132860, 395005, 141063, 444168, 50960, 542485, 116502, 321304, 
    42779, 493339, 173856, 149295, 362306, 124759, 477016, 477015, 493407, 1888, 378720, 575331, 
    92009, 288633, 83836, 419714, 403336, 534428, 493471, 477087, 575419, 477115, 92093, 501696, 
    337866, 42956, 174028, 10196, 190423, 116696, 264158, 542699, 362480, 239613, 468993, 509971, 
    534559, 141346, 329762, 18467, 477226, 485426, 419892, 559163, 321601, 149572, 141387, 67660, 
    43093, 182362, 133210, 182366, 419942, 174185, 575594, 174196, 190581, 452727, 542839, 338050, 
    428163, 125076, 206998, 84120, 51355, 493724, 133275, 321706, 92332, 223404, 51376, 239793, 
    125107, 288948, 436406, 321725, 460991, 182474, 534735, 542939, 256223, 297187, 190705, 362740, 
    207094, 108803, 133384, 198930, 436507, 534817, 2346, 305450, 297267, 59710, 362825, 51533, 
    387429, 518522, 534906, 518524, 485757, 354692, 223640, 453026, 125350, 117160, 207289, 18885, 
    403910, 379340, 182734, 485840, 322002, 264660, 43477, 158167, 27104, 133620, 92675, 535050, 
    150026, 43560, 215596, 395831, 322106, 35397, 313932, 445008, 158299, 141920, 141922, 379508, 
    510591, 313984, 510594, 543364, 502409, 371348, 273045, 559768, 125598, 27298, 379564, 420532, 
    395965, 387792, 191193, 314074, 559840, 109291, 436972, 355069, 166653, 420610, 330499, 330500, 
    469762, 125729, 371490, 281387, 469807, 150320, 183088, 207668, 297787, 183100, 43838, 183112, 
    305993, 371531, 428885, 35671, 68442, 142182, 215913, 11115, 437102, 355183, 60278, 363387, 
    396157, 19333, 11156, 191381, 330660, 469924, 289703, 207798, 3001, 19397, 404424, 347111, 
    101355, 117742, 543729, 281586, 27642, 3067, 142337, 429065, 265227, 150541, 199698, 240662, 
    289833, 52270, 306231, 445495, 511031, 248911, 248912, 396369, 134238, 142440, 289899, 76918, 
    289912, 453755, 543872, 3220, 150686, 142497, 150698, 126123, 306353, 560311, 404668, 314572, 
    429261, 183502, 109776, 208082, 543957, 224470, 306394, 27871, 36068, 511208, 330990, 109820, 
    167169, 503050, 511251, 85281, 109858, 519460, 429361, 3378, 126263, 249151, 478528, 290115, 
    372037, 290122, 19793, 380247, 159069, 544104, 306553, 19836, 560525, 208283, 60849, 503233, 
    3521, 511432, 232910, 462289, 503249, 454112, 306667, 183788, 175600, 495090, 536058, 445950, 
    454148, 380420, 388616, 355851, 60945, 568851, 478741, 192039, 445991, 421421, 224821, 552503, 
    151100, 454205, 405060, 118344, 249418, 347724, 249429, 331350, 536154, 183910, 454255, 265839, 
    536183, 421495, 462461, 421533, 151214, 356015, 544432, 528047, 183988, 429754, 257723, 175804, 
    126653, 429758, 446147, 298711, 487131, 224989, 216802, 77542, 397044, 487159, 519929, 577283, 
    28463, 151345, 364343, 192319, 479042, 331588, 77643, 462671, 511828, 438101, 151387, 577378, 
    511844, 364399, 495481, 315268, 339845, 561033, 454543, 36755, 389020, 569251, 257955, 151466, 
    4011, 290750, 282586, 126941, 159714, 471015, 241645, 446461, 143358, 421887, 446471, 241675, 
    536589, 520209, 454679, 389145, 536607, 45105, 184377, 544831, 389183, 315474, 176211, 479316, 
    36951, 208991, 446565, 577640, 4211, 495731, 364677, 430220, 151699, 192660, 77973, 561300, 
    28823, 20632, 94359, 405663, 503972, 77990, 315565, 323765, 495802, 487612, 151742, 209089, 
    299205, 37062, 151758, 61647, 479442, 348371, 127192, 119002, 102634, 258282, 143607, 536827, 
    94459, 332038, 389389, 192787, 184606, 168225, 332065, 512292, 413999, 512308, 315702, 381246, 
    315713, 225603, 119113, 504140, 176466, 446812, 119137, 217448, 20853, 53629, 495997, 332159, 
    536960, 143767, 192920, 233882, 414113, 422328, 94651, 520637, 430530, 430533, 496106, 307703, 
    389624, 324103, 143901, 176671, 455203, 365094, 225834, 70187, 307759, 201270, 455225, 78394, 
    438851, 86596, 250440, 365131, 496206, 283217, 463458, 234083, 430692, 29286, 479848, 520808, 
    438896, 447089, 463474, 62068, 283257, 103033, 283261, 520848, 160415, 570022, 348841, 53929, 
    397997, 561856, 545476, 479944, 250569, 488146, 21217, 455400, 234230, 348922, 275197, 365310, 
    307966, 357117, 381704, 21260, 365325, 267022, 365329, 496402, 578326, 406296, 537376, 21281, 
    144179, 144180, 86842, 119617, 168775, 373577, 185168, 562002, 13140, 316254, 545632, 37729, 
    275304, 4970, 389996, 177019, 512911, 209809, 37779, 324507, 45994, 390068, 521142, 455613, 
    447424, 578497, 390083, 291784, 54225, 185305, 308194, 553954, 562149, 455654, 46065, 373748, 
    29698, 381957, 283658, 95249, 62483, 234515, 308251, 381994, 365611, 283697, 152626, 308274, 
    136250, 144444, 70718, 46146, 324677, 103496, 169045, 210012, 21639, 390287, 259216, 570512, 
    423058, 210071, 554138, 447647, 300200, 496813, 144560, 152776, 275657, 38090, 578765, 152795, 
    529629, 357601, 546020, 382188, 54517, 300280, 54527, 161028, 537862, 5383, 46345, 136458, 
    308509, 333088, 447778, 300324, 29994, 488747, 398637, 431410, 283957, 152914, 5472, 284001, 
    71011, 521572, 13670, 161129, 497005, 447854, 251249, 120181, 87414, 79224, 480634, 95611, 
    431492, 193925, 398727, 38282, 259467, 234902, 554392, 103843, 185768, 562602, 570801, 30133, 
    579003, 103870, 95679, 333247, 87489, 554433, 292289, 562633, 112085, 87509, 382423, 202201, 
    251358, 357877, 366071, 30210, 349709, 374288, 407057, 243219, 284192, 538149, 5670, 316968, 
    308780, 185902, 71222, 235069, 144959, 30273, 423498, 562766, 235093, 382557, 259683, 267880, 
    79465, 276077, 333434, 439930, 5758, 259712, 456323, 464519, 407180, 284324, 54957, 366257, 
    374451, 284355, 54989, 71385, 407260, 194289, 79602, 5879, 55033, 235259, 325374, 415492, 
    96008, 194313, 145174, 112410, 562973, 177952, 177953, 96034, 145186, 472893, 87876, 218956, 
    292690, 530259, 112478, 423785, 341871, 522100, 153462, 14209, 251777, 145288, 513933, 227220, 
    358302, 79792, 440244, 153542, 489419, 112591, 88023, 47066, 317410, 514018, 423906, 473069, 
    522221, 161777, 456705, 210958, 161807, 260116, 153631, 432160, 350242, 202797, 407602, 194620, 
    243773, 440381, 301121, 473159, 317514, 333904, 424018, 407634, 383066, 22621, 39010, 137320, 
    579693, 505967, 497777, 391284, 30836, 514180, 366724, 39053, 80013, 448653, 546963, 342165, 
    129175, 39064, 563354, 252074, 96435, 112820, 571575, 547003, 30911, 424132, 547013, 14537, 
    522443, 334032, 6355, 219349, 170207, 358642, 211186, 571635, 252147, 342259, 121087, 489728, 
    194820, 571653, 284934, 6406, 153865, 235788, 407822, 235792, 112915, 121110, 227607, 55575, 
    506137, 284954, 260382, 522527, 555298, 358690, 391474, 547135, 121157, 579911, 547147, 416078, 
    489810, 170323, 80219, 268640, 334178, 153956, 268644, 219493, 555368, 14698, 358767, 432503, 
    530811, 211326, 276863, 432510, 358788, 432519, 326035, 563605, 170394, 579997, 506270, 113058, 
    375202, 457131, 244141, 440752, 6579, 154037, 227769, 326080, 326088, 285132, 137677, 498125, 
    522703, 162257, 481748, 563676, 227806, 334302, 571876, 113126, 96745, 399851, 137717, 145912, 
    113147, 6662, 268809, 424458, 72203, 31247, 522778, 39456, 72233, 490031, 31282, 55873, 
    55879, 162375, 39502, 244303, 105040, 154193, 539216, 72275, 277089, 162414, 416372, 490110, 
    260738, 318088, 244365, 572046, 170640, 301714, 334484, 88730, 424604, 228002, 400039, 219820, 
    375484, 268988, 56002, 498374, 498392, 318174, 318175, 96998, 309993, 457449, 129771, 39663, 
    203506, 350984, 408328, 572173, 531234, 277289, 15151, 138032, 113461, 154423, 416569, 211771, 
    441156, 97092, 129864, 31561, 31567, 64339, 88917, 260969, 97130, 498547, 506748, 228224, 
    383873, 473993, 318346, 113556, 449433, 88988, 433052, 269213, 129951, 433055, 457636, 97191, 
    121792, 465862, 302026, 523211, 211919, 408528, 465877, 15318, 261077, 97240, 506843, 56289, 
    572399, 31729, 56306, 457717, 318467, 64516, 367626, 277529, 441382, 121902, 457780, 40006, 
    433224, 515147, 531532, 302166, 359521, 203879, 23656, 482409, 523371, 416875, 531569, 343154, 
    539767, 277625, 449657, 449660, 285825, 556162, 261251, 72839, 334995, 277653, 269462, 187541, 
    326820, 482470, 130215, 425127, 154801, 105658, 220347, 72899, 572611, 384213, 277738, 89322, 
    154877, 507136, 81155, 122116, 195851, 64797, 507167, 212261, 236843, 286016, 253250, 56647, 
    146760, 310607, 179545, 48475, 580957, 490850, 540006, 286064, 572811, 531860, 105877, 400792, 
    130458, 245153, 196018, 540082, 523711, 187857, 409042, 466390, 441816, 187868, 32231, 105961, 
    343534, 384496, 327153, 179699, 531956, 253429, 531964, 581118, 7689, 65035, 146961, 531998, 
    482848, 458275, 581157, 253483, 441903, 384559, 220722, 572978, 155192, 515642, 253498, 319043, 
    106053, 482889, 581205, 417369, 196192, 204384, 204386, 540259, 122469, 376422, 523883, 286322, 
    253557, 278134, 114303, 229000, 229002, 73367, 212633, 384673, 57005, 417455, 294587, 417487, 
    450263, 458463, 499425, 147173, 188137, 147179, 278256, 409331, 73467, 81660, 278272, 245505, 
    327433, 229132, 220951, 81691, 507680, 73511, 343849, 212780, 450357, 417596, 253764, 155465, 
    442185, 294734, 155493, 581486, 573297, 262006, 384888, 163710, 425859, 556932, 401291, 81809, 
    204690, 573336, 278431, 540575, 434083, 139183, 130993, 393140, 294839, 212920, 245697, 384967, 
    57300, 73688, 163803, 434141, 409570, 385001, 466924, 212974, 204785, 253937, 73721]
V1_UNSEEN_866_337 = [  # 337 classes
      12,   13,   16,   19,   20,   29,   30,   37,   38,   39, 
      41,   48,   50,   51,   62,   68,   70,   77,   81,   84, 
      92,  104,  105,  112,  116,  118,  122,  125,  129,  130,  
     135,  139,  141,  143,  146,  150,  154,  158,  160,  163,  
     166,  171,  178,  181,  195,  201,  208,  209,  213,  214,  
     221,  222,  230,  232,  233,  235,  236,  237,  239,  243,  
     244,  246,  249,  250,  256,  257,  261,  264,  265,  268,  
     269,  274,  280,  281,  286,  290,  291,  293,  294,  299,  
     300,  301,  303,  306,  309,  312,  315,  316,  320,  322,  
     325,  330,  332,  347,  348,  351,  352,  353,  354,  356,  
     361,  363,  364,  365,  367,  373,  375,  380,  381,  387,  
     388,  396,  397,  399,  404,  406,  409,  412,  413,  415,  
     419,  425,  426,  427,  430,  431,  434,  438,  445,  448,  
     455,  457,  466,  477,  478,  479,  480,  481,  485,  487,  
     490,  491,  502,  505,  507,  508,  512,  515,  517,  526,  
     531,  534,  537,  540,  541,  542,  544,  550,  556,  559,  
     560,  566,  567,  570,  571,  573,  574,  576,  579,  581,  
     582,  584,  593,  596,  598,  601,  602,  605,  609,  615,  
     617,  618,  619,  624,  631,  633,  634,  637,  639,  645,  
     647,  650,  656,  661,  662,  663,  664,  670,  671,  673,  
     677,  685,  687,  689,  690,  692,  701,  709,  711,  713,  
     721,  726,  728,  729,  732,  742,  751,  753,  754,  757,  
     758,  763,  768,  771,  777,  778,  782,  783,  784,  786,  
     787,  791,  795,  802,  804,  807,  808,  809,  811,  814,  
     819,  821,  822,  823,  828,  830,  848,  849,  850,  851,  
     852,  854,  855,  857,  858,  861,  863,  868,  872,  882,  
     885,  886,  889,  890,  891,  893,  901,  904,  907,  912,  
     913,  916,  917,  919,  924,  930,  936,  937,  938,  940,  
     941,  943,  944,  951,  955,  957,  968,  971,  973,  974,  
     982,  984,  986,  989,  990,  991,  993,  997, 1002, 1004,  
    1009, 1011, 1014, 1015, 1027, 1028, 1029, 1030, 1031, 1046, 
    1047, 1048, 1052, 1053, 1056, 1057, 1074, 1079, 1083, 1115, 
    1117, 1118, 1123, 1125, 1128, 1134, 1143, 1144, 1145, 1147, 
    1149, 1156, 1157, 1158, 1164, 1166, 1192,
]
# ids = [397133]
import os
import json
import torch
from pathlib import Path
import numpy as np
from tqdm import tqdm
os.symlink('/data/oss_bucket_0', 'data')
class_embeddings = torch.load('data/lvis_v1/prompt/detpro_ViT-B-32.pt', 'cpu').half()
lvis = json.load(Path('data/lvis_v1/annotations/lvis_v1_train.json').open())
# cat2id = {cat['id']: i for i, cat in enumerate(lvis['categories']) if cat['frequency'] == 'r'}
cat2id = {cat['id']: i for i, cat in enumerate(lvis['categories'])}
correct = np.zeros(class_embeddings.shape[0])
# for id_ in ids:
i = 0
for data in tqdm(Path('data/lvis_v1/image_embeddings1/train').glob('*.pth')):
    i += 1
    if i > 3000:
        break
    # image_embedding = torch.load(f'data/lvis_v1/image_embeddings/train/{id_}.pth', map_location='cpu').half()
    image_embedding = torch.load(data, map_location='cpu').half()
    logits: torch.Tensor = torch.einsum('d, n d -> n', image_embedding, class_embeddings)
    _, indices = logits.sort(dim=-1, descending=True)
    # classes = {cat2id[ann['category_id']] for ann in lvis['annotations'] if ann['image_id'] == id_ and ann['category_id'] in cat2id}
    classes = {cat2id[ann['category_id']] for ann in lvis['annotations'] if ann['image_id'] == int(data.stem)}
    for i, label in enumerate(indices.tolist()):
        if label in classes:
            correct[i] += 1
correct = correct.cumsum()
print(correct.tolist())

